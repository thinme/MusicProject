plugins {
	//프로젝트의 스프링부트 프레임워크의 버전 설정
	id 'org.springframework.boot' version '2.7.2'
	//프로젝트에 필요한 라이브러리를 관리해주는 툴(매니지먼트)의 버전
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	//사용 언어
	id 'java'
}
//프로젝트 정보
group = 'com.example'
// 첫번째자리 : 메이저 업데이트, 두번째자리 : 마이너 업데이트, 세번째 자리 : 픽스버전(오탈자,이미지변경)
version = '0.0.1-SNAPSHOT'
//자바버전
sourceCompatibility = '17'

configurations {
	compileOnly{
		extendsFrom annotationProcessor
	}
}

//디펜더시를 다운받는 위치
//dependency 라이브러리를 다운받는 사이트
repositories {
	mavenCentral()
}
//라이브러리
dependencies {

	//compile 자바코드를 실행가능한 바이트코드로 변경(바이트코드로 실행하면 컴퓨터는 인식하고 실행)
	//runtime 실행가능한(컴파일이 완료된) 코드를 실행하는 시점
	//인터프린트는 실시간으로 개발한 코드를 해석해서 컴퓨터가 실행

	//롬북 도메인을(class)의 getter,setter,builder 등을 자동으로 코드 생성(단, 컴파일에서만)
	//룸북추가
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//implementation

	//라이브러리 갖다 쓴느것 (자바 기본 규칙에 따라)
	//프레임워크 프레임워크의 독자적인 구조와 규칙에 따름

	//implementation 구현된 전체에서 사용하는 라이브러리(프레임워크)
	//타임리프 springboot(백엔드)와 html을 유연하게 연결해주는 템플릿(단, 서버에서)
	//* 종속관계
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//starter 스프링부틍에서 쓰느느 기본 라이브러리 집합
	//Jpa(Java Persistence API 자바에서 db와 연결되는 객체지향 API(인터페이스)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//starter web에 tomcat이 포함되어 있음
	//tomcat spring 프로젝트를 웹하고 연결해주는 도구
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//유닛 테스트(자바코드를 만들면 잘 돌아가는지 기능별로 테스트할때 쓰는용도

	compileOnly 'org.springframework.boot:spring-boot-devtools'

	//db오라클 접속에 필요한 라이브러리
	//oracle8 오라클에서 제공하는 라이브러리로 JAVA와 연동하기위해 쓰임(8버전인 19c에 활용가능)
	testRuntimeOnly 'com.oracle.database.jdbc:ojdbc8'
	//oraclepki,osdt_core,osdt_ccert 오라클과 자바 사이에서 연동되는 드라이버를 사용하기위한 정보가 담긴 라이브러리
	//드라이버 예)그래픽카드를 컴퓨터와 연결하기 위해서 드라이버를 다운받아 [컴퓨터가 그래픽카드를 드라이버를 통해 사용]
	//전자지갑에 있음
	implementation 'com.oracle.database.security:oraclepki'
	implementation 'com.oracle.database.security:osdt_core'
	implementation 'com.oracle.database.security:osdt_cert'

}

//테스트 모듈에 관한 정보
tasks.named('test') {
	useJUnitPlatform()
}